{"version":3,"sources":["script.js"],"names":["books","id","Date","now","title","author","genre","pages","status","libraryForm","document","querySelector","bookList","items","addBooks","e","preventDefault","name","currentTarget","item","value","push","target","reset","dispatchEvent","CustomEvent","showingItems","html","map","book","tile","join","innerHTML","readBook","console","log","itemStatus","find","deleteItem","filter","mirrorBook","object","JSON","stringify","localStorage","setItem","storeFromLocal","array","parse","getItem","window","addEventListener","matches","parseInt"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["const books = [\r\n    {\r\n        id: Date.now(), \r\n        title: 'Little woman',\r\n        author: 'Louisa',\r\n        genre: 'Romantic',\r\n        pages: 759,\r\n        status: false,\r\n    },\r\n    {\r\n        id: Date.now(),\r\n        title: 'Harry Potter',\r\n        author: 'J.k Rowling',\r\n        genre: 'Fantasy fiction',\r\n        pages: 978,\r\n        status: true,\r\n    },\r\n    {\r\n        id: Date.now(),\r\n        title: 'Educated',\r\n        author: 'Tara Westover',\r\n        genre: 'Biography',\r\n        pages: 352,\r\n        status: true,\r\n    }\r\n];\r\n\r\nconst libraryForm = document.querySelector('.form');\r\nconst bookList = document.querySelector('tbody');\r\n\r\nlet items = [];\r\n\r\n// Handling add button \r\nconst addBooks = (e) => {\r\n    e.preventDefault();\r\n    const name = e.currentTarget;\r\n\r\n    const item = {\r\n        id: Date.now(),\r\n        title: name.title.value,\r\n        author: name.author.value,\r\n        genre: name.genre.value,\r\n        pages: name.pages.value,\r\n        status: name.status.value\r\n    }\r\n\r\n    items.push(item);\r\n    e.target.reset();\r\n\r\n    bookList.dispatchEvent(new CustomEvent('bookUpdated'))\r\n}\r\n\r\n// Showing the items to the table list\r\nconst showingItems = () => {\r\n    const html = items.map(book => \r\n        `\r\n        <tr>\r\n            <td>${book.title}</td>\r\n            <td>${book.author}</td>\r\n            <td>${book.genre}</td>\r\n            <td>${book.pages}</td>\r\n            <td><input type=\"checkbox\" value=\"${book.id}\" ${book.status === 'read' ? 'checked' : ''}></td>\r\n            <td><button class=\"delete\" aria-label=\"Remove ${book.tile}\" value=${book.id}>Delete</button></td>\r\n        </tr> \r\n        `    \r\n    ).join('');\r\n    bookList.innerHTML = html;\r\n}\r\n\r\n// If the book is read, checkbox is checked\r\nconst readBook = (id) => {\r\n    console.log(id);\r\n    const itemStatus = items.find(item => item.id === id);\r\n    itemStatus.status = !itemStatus.status;\r\n    bookList.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n}\r\n\r\n// Deleting items\r\nconst deleteItem = (id) => {\r\n    console.log('id: ', id)\r\n    items = items.filter(item => {\r\n        return item.id !== id;\r\n    });\r\n    bookList.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n}\r\n\r\n// Stringifying the books in order to store the to local storage\r\nconst mirrorBook = () => {\r\n    const object = JSON.stringify(items)\r\n    localStorage.setItem('items', object);\r\n}\r\n\r\n// Storing the objects to the local storage\r\nconst storeFromLocal = () => {\r\n    const array = JSON.parse(localStorage.getItem('items'));\r\n    // If array is truthy, push the array into items.\r\n    if (array) {\r\n        items.push(...array);\r\n        bookList.dispatchEvent(new CustomEvent('bookUpdated'))\r\n    } \r\n    // If array is not truthy, push the books.\r\n    else {\r\n        items.push(...books);\r\n        mirrorBook();\r\n        bookList.dispatchEvent(new CustomEvent('bookUpdated'))\r\n    }\r\n}\r\n\r\n// Add event listener the showing items function\r\nwindow.addEventListener('DOMContentLoaded', showingItems);\r\n\r\n// Listening for submit form\r\nlibraryForm.addEventListener('submit', addBooks);\r\n\r\n// Add event listener to add the new book to the tbody of the table\r\nbookList.addEventListener('bookUpdated', showingItems);\r\n\r\n// Event listener to mirror the books\r\nbookList.addEventListener('bookUpdated', mirrorBook);\r\n\r\n// Event listener for storing the books to local storage\r\nstoreFromLocal();\r\n\r\n// Event listener for checkbox and delete button\r\nbookList.addEventListener('click', (e) => {\r\n    // Checkbox\r\n    if (e.target.matches('input[type=\"checkbox\"]')) {\r\n        readBook(parseInt(e.target.value));\r\n    }\r\n\r\n    // Delete button\r\n    if (e.target.matches('button.delete')) {\r\n        deleteItem(parseInt(e.target.value));\r\n    }\r\n});\r\n\r\n"]}